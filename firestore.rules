rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'user';
    }
    
    function isCounsellor() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'counsellor' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verificationStatus == 'verified';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Sessions collection
    match /sessions/{sessionId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.counsellorId == request.auth.uid);
      allow create: if isUser();
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.counsellorId == request.auth.uid);
    }
    
    // Certificates collection
    match /certificates/{certificateId} {
      allow read: if isCounsellor() && 
        resource.data.counsellorId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isCounsellor() && 
        resource.data.counsellorId == request.auth.uid;
    }
    
    // Chat messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.senderId == request.auth.uid;
    }
    
    // Video calls collection
    match /calls/{callId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.counsellorId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.counsellorId == request.auth.uid);
      
      // Allow access to caller candidates subcollection
      match /callerCandidates/{candidateId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null;
      }
      
      // Allow access to callee candidates subcollection
      match /calleeCandidates/{candidateId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null;
      }
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
